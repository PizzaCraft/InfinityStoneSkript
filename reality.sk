on load:
    set {customitems::realitystone} to nether star of curse of vanishing named "§4§lReality Stone" with lore "§f§lYour attacks have a 5 percent chance of inflicting poison" and "§u§lRight-Click: Reality Distortion - 1:30 cooldown" with custom model data 2
    set {customitems::realitystone2} to nether star of curse of vanishing named "§4§lReality Stone" with lore "§8§lPristine" and "§f§lYour attacks have a 10 percent chance of dealing double damage" and "§u§lRight-Click: Reality Distortion - 1:30 cooldown" and "§9§lLeft-Click: reality Wave - 2:00 Cooldown" with custom model data 2
    set {customitems::realitystone3} to nether star of curse of vanishing named "§4§lReality Stone" with lore "§8§lPristine" and "§f§lYour attacks have a 10 percent chance of dealing double damage" and "§u§lRight-Click: Reality Distortion - 1:30 cooldown" and "§9§lLeft-Click: reality Wave - 2:00 Cooldown" and "§u§lMainhand + Hit Player: Amplify reality - 5:00 cooldown" with custom model data 2
   

on damage:
    if attacker is a player:
        if name of attacker's offhand tool is "§4§lReality Stone":

            # Weakness chance (5%)
            set {_chance} to random integer between 1 and 100
            if {_chance} <= 5:
                apply poison 2 to victim for 3 seconds
                execute console command "execute at %name of victim% run particle minecraft:large_smoke ~ ~ ~ 4 4 4 0 40"
                execute console command "playsound minecraft:block.anvil.land master %name of attacker% ~ ~ ~ 1 1"

every 10 seconds:
    loop all players:
        if loop-player's tool's name is "§4§lReality Stone": # Main hand check
            apply potion of health boost of tier 1 to loop-player for 11 seconds
        else if loop-player's offhand tool's name is "§4§lReality Stone": # Offhand check
            apply potion of health boost of tier 1 to loop-player for 11 seconds


on death:
    set {_saved::*} to ""
    loop all items in victim's inventory:
        if name of loop-item contains "§4§lReality Stone":
            add loop-item to {_saved::*}
    wait 1 tick
    loop {_saved::*}:
        give loop-value to victim

on rightclick:
    if name of offhand item of player is "§4§lReality Stone":

        # Prevent multiple triggers in same tick
        if {realitystone_processing::%player%} is set:
            stop
        set {realitystone_processing::%player%} to true
        wait 1 tick
        delete {realitystone_processing::%player%}

        set {_item} to player's held item
        {_item} is air or diamond sword or diamond axe or iron sword or iron axe or stone sword or stone axe

            # proceed

        if {realitystone_cooldown::%player%} is set:
            if {realitystone_cooldown_message::%player%} is not set:
                send "&4🔮 &cYour §4Reality Shift &cability is on cooldown for §4%{realitystone_cooldown::%player%}%s" to player
                set {realitystone_cooldown_message::%player%} to true
                wait 20 ticks
                delete {realitystone_cooldown_message::%player%}
            stop

        if {DoubleClick::%player's uuid%} is not set:
            set {DoubleClick::%player's uuid%} to true
            wait 15 ticks
            delete {DoubleClick::%player's uuid%}
        else:
            if {realitystone_activated::%player%} is set:
                stop
            delete {DoubleClick::%player's uuid%}
            send "&4🔮 &cYou have activated §4Reality Shift" to player
            set {realitystone_activated::%player%} to true
            set {realitystoneInUse::%player%} to true
            set {_location} to location of player
            loop players in radius 5 around player:
                play sound "entity.illusioner.prepare_blindness" with volume 1 and pitch 1 at player
            execute console command "tempblocks %name of player%"
            loop 10 times:
                loop all players in radius 5 around {_location}:
                    if {trust::%uuid of player%::*} contains uuid of loop-player:
                        apply regeneration 2 to loop-player for 2 seconds replacing existing effect
                apply regeneration 2 to player for 2 seconds replacing existing effect
                wait 1 second
                    


            delete {realitystoneInUse::%player%}


            # Start cooldown
            set {realitystone_cooldown::%player%} to 50

            while {realitystone_cooldown::%player%} > 0:
                wait 1 second
                subtract 1 from {realitystone_cooldown::%player%}

            delete {realitystone_cooldown::%player%}
            delete {realitystone_activated::%player%}
            
on rightclick with nether star:
    if player is set: # Ensures only players trigger the event
        if lore of player's tool contains "§u§lRight-Click: Reality Distortion - 1:30 cooldown":
            if {realityStoneCooldown::%player%} is set:
                set {_remaining} to {realityStoneCooldown::%player%}
                send "§cAbility is on cooldown! Remaining time: %{_remaining}% seconds" to player
            else:
                if {realityStoneTrigger::%player%} is not set:
                    set {realityStoneTrigger::%player%} to true
                    send "§bYou activate the Reality Stone! Reality begins to shift around you." to player

                    # Reality Stone ability execution
                    set {realityInUse::%player%} to true
                    set {_uuid} to uuid of player
                    execute console command "/score particles target:%uuid of player% shape:blackSun color:red radius:5 radiusRate:0.1 rate:40 rateChange:0.1"

                    loop all players in radius 8 around player:
                        if uuid of loop-player is not uuid of player:
                            if {trust::%uuid of player%::*} does not contain uuid of loop-player:
                                set loop-player's max health to 8
                                if health of loop-player > 8:
                                    set health of loop-player to 8
                                send "&cReality bends... Your vitality shrinks." to loop-player
                                set {reality::affected::%uuid of loop-player%} to true

                    # Clear cobwebs/water every 0.25s for 15 seconds
                    loop 60 times:
                        execute console command "/execute at %name of player% run fill ~4 ~1 ~4 ~-4 ~-1 ~-4 air replace minecraft:cobweb"
                        execute console command "/execute at %name of player% run fill ~4 ~1 ~4 ~-4 ~-1 ~-4 air replace minecraft:water"
                        wait 0.25 seconds

                    # Restore players' health cap after effect ends
                    loop all players:
                        set loop-player's max health to 10
                        if health of loop-player > 10:
                            set health of loop-player to 10
                        delete {reality::affected::%uuid of loop-player%}
                    delete {realityInUse::%player%} 
                    # Set cooldown
                    set {realityStoneCooldown::%player%} to 90
                    while {realityStoneCooldown::%player%} > 0:
                        wait 1 second
                        set {realityStoneCooldown::%player%} to {realityStoneCooldown::%player%} - 1

                    delete {realityStoneCooldown::%player%}
                    delete {realityStoneTrigger::%player%}
                    send "§eYour Reality Stone ability is ready to use again!" to player
every 1 second:
    loop all players:
        if name of offhand item of loop-player is "§4§lReality Stone":
            # 💔 Main Reality Stone cooldown or “Active..” in dark red
            if {realityInUse::%loop-player%} is set:
                set {_cd1} to "&4💔 &cActive.."
            else if {realityStoneCooldown::%loop-player%} is set:
                set {_total1} to {realityStoneCooldown::%loop-player%}
                set {_min} to floor({_total1} / 60)
                set {_sec} to {_total1} - {_min} * 60

                if {_min} > 0:
                    set {_cd1} to "&4💔 &b%{_min}%m %{_sec}%s"
                else:
                    set {_cd1} to "&4💔 &b%{_sec}%s"
            else:
                set {_cd1} to "&4💔 &aReady!"

            # ⛔ Secondary Reality Stone cooldown or “Active..” in dark red
            if {realitystoneInUse::%loop-player%} is set:
                set {_cd2} to "&4⛔ &cActive.."
            else if {realitystone_cooldown::%loop-player%} is set:
                set {_cd2} to "&4⛔ &b%{realitystone_cooldown::%loop-player%}%s"
            else:
                set {_cd2} to "&4⛔ &aReady!"

            # Send combined action bar
            send action bar "%{_cd1}% %{_cd2}%" to loop-player


on join:
    set player's max health to 10
    delete {reality::affected::%uuid of player%}

options:
  duration: 10 seconds

variables:
  {blockProtected::%location%} = true
  {originalBlock::%location%} = material

command /tempblocks [<offlineplayer>]:
    permission: op
    trigger:
        if arg-1 is set:
            set {_target} to arg-1
        else:
            set {_target} to player

        set {_loc} to location of {_target}
        set {_radius} to 1

        # Clear lists
        set {_blocks::*} to air
        set {_blocks2::*} to air
        set {_blocks3::*} to air

        loop 5 times:
            loop blocks in radius {_radius} around {_loc}:
                set {unbreakable2::%loop-block%} to true

                # For grass block, stone, dirt, red sand, sand, cobblestone
                if loop-block is grass block or stone or dirt or red sand or sand or cobblestone:
                    set {_originalType} to loop-block's type
                    set {_blockLoc} to loop-block's location
                    add {_blockLoc} to {_blocks::*}
                    set {_blocks::%{_blockLoc}%} to {_originalType}

                    # Random replacement
                    set {_rand} to random integer between 1 and 3
                    if {_rand} = 1:
                        set loop-block to red_mushroom_block
                    else if {_rand} = 2:
                        set loop-block to nether_wart_block
                    else:
                        set loop-block to red_glazed_terracotta

                # For logs
                else if loop-block is oak log or spruce log or acacia log or dark oak log or cherry log or birch log or jungle log or mangrove log:
                    set {_originalType2} to loop-block's type
                    set {_blockLoc2} to loop-block's location
                    add {_blockLoc2} to {_blocks2::*}
                    set {_blocks2::%{_blockLoc2}%} to {_originalType2}
                    set loop-block to acacia log

            add 1 to {_radius}

        wait {@duration}

        # Revert grass/stone/dirt replacements
        loop {_blocks::*}:
            set {_blockLoc} to loop-value
            set {_originalType} to {_blocks::%{_blockLoc}%}
            if {_originalType} is not air:
                set {unbreakable::%block%} to false
                set block at {_blockLoc} to {_originalType}

        # Revert logs
        loop {_blocks2::*}:
            set {_blockLoc2} to loop-value
            set {_originalType2} to {_blocks2::%{_blockLoc2}%}
            if {_originalType2} is not air:
                set {unbreakable::%block%} to false
                set block at {_blockLoc2} to {_originalType2}

        # Revert mushroom blocks (if any)
        loop {_blocks3::*}:
            set {_blockLoc3} to loop-value
            set {_originalType3} to {_blocks3::%{_blockLoc3}%}
            if {_originalType3} is not air:
                set {unbreakable::%block%} to false
                set block at {_blockLoc3} to {_originalType3}

        # Clear protection variables around the location
        loop all blocks in radius 6 around {_loc}:
            delete {unbreakable::%loop-block%}
            delete {unbreakable2::%loop-block%}
            
command /temblocksprotectionclear:
    permission: op
    trigger:
        loop all blocks in radius 100 of player:
            delete {unbreakable2::%loop-block%}

on place:
  if {unbreakable2::%event-block%} is set:
    cancel event
    play sound "anvil.break" with volume 1 and pitch 1 to event-player

on break:
  if {unbreakable2::%event-block%} is set:
    cancel event
    play sound "anvil.break" with volume 1 and pitch 1 to event-player



on leftclick with nether star:
    if player is set: # Ensures only players trigger the event
        if lore of player's tool contains "§9§lLeft-Click: reality Wave - 2:00 Cooldown":
            if {realityStoneCooldown1::%player%} is set:
                set {_remaining1} to {realityStoneCooldown1::%player%}
                send "§cSecond Ability is on cooldown! Remaining time: %{_remaining1}% seconds" to player
            else:
                if {realityStoneTrigger1::%player%} is not set: # Prevents repeat activations
                    set {realityStoneTrigger1::%player%} to true
     
                    execute console command "score particles target:%uuid of player% shape:circularBeam color:PURPLE maxRadius:5 rate:100 radiusRate:15 extend:2 time:100"           
                    
                    # Damage players caught in the wave
                    loop 6 times:
                        loop all players in radius 8 around player:
                            set {_target} to loop-player
                            if {_target} is not player: # Excludes ability user
                                if {trust::%uuid of player%::*} does not contain uuid of {_target}: # Excludes trusted players
                                    damage {_target} by 4 hearts
                                    apply slowness 2 to {_target} for 120 ticks
                                    wait 1 second

                    set {realityStoneCooldown1::%player%} to 120
                
                    # Countdown for cooldown
                    while {realityStoneCooldown1::%player%} > 0:
                        wait 1 second
                        set {realityStoneCooldown1::%player%} to {realityStoneCooldown1::%player%} - 1
                    
                    delete {realityStoneCooldown1::%player%}
                    delete {realityStoneTrigger1::%player%}
                    send "§eYour reality Stone second ability is ready to use again!" to player

on damage:
    if attacker is a player:
        if attacker's tool's name is "§4§lReality Stone": # Ensures player is holding reality Stone
            if lore of attacker's tool contains "§u§lMainhand + Hit Player: Amplify reality - 5:00 cooldown":
                if {realityStoneCooldown2::%attacker%} is set:
                    set {_remaining} to {realityStoneCooldown2::%attacker%}
                    send "§cUltimate is on cooldown! Remaining time: %{_remaining}% seconds" to attacker
                    cancel event
                else:
                    if {realityStoneTrigger2::%attacker%} is not set: # Prevents repeat activations
                        set {realityStoneTrigger2::%attacker%} to true
                        
                        # Activate ability for 30 seconds
                        set {realityStoneActive::%attacker%} to true
                        set {realityStoneMultiplier::%attacker%} to 1.1 # Start at 1.1x multiplier
                        send "§eYour reality Stone ability is active! Each hit temporarily increases damage." to attacker
                        execute console command "/score particles target:%uuid of attacker% shape:helix particle:dragon_breath strings:4 radius:2 rate:0.001 extension:4 height:2 speed:5 fadeUp:false fadeDown: false"
                        
                        loop 30 times: # Loop every second
                            if {realityStoneMultiplier::%attacker%} < 1.75: # Ensure max cap at 1.75x
                                add 0.05 to {realityStoneMultiplier::%attacker%}
                                send "§eYour attack multiplier has increased to %{realityStoneMultiplier::%attacker%}%!" to attacker
                            wait 1 second
                        
                        # Cleanup after 30 seconds
                        delete {realityStoneActive::%attacker%}
                        delete {realityStoneMultiplier::%attacker%}

                        # Set cooldown (5 minutes)
                        set {realityStoneCooldown2::%attacker%} to 300
                    
                        # Countdown for cooldown
                        while {realityStoneCooldown2::%attacker%} > 0:
                            wait 1 second
                            set {realityStoneCooldown2::%attacker%} to {realityStoneCooldown2::%attacker%} - 1
                        
                        delete {realityStoneCooldown2::%attacker%}
                        delete {realityStoneTrigger2::%attacker%}
                        send "§eYour reality Stone ultimate is ready to use again!" to attacker

variables:
    {cooldown.%player%} = 0

variables:
    {cooldown.%player%} = 0
    {autoEnchant.%player%} = false  # Default: Auto Enchant enabled


on sneak toggle:
    if {autoEnchant.%player%} is false:
        stop  # Prevent activation if disabled
    if {cooldown.%player%} is greater than now:
        send "&creality Stone auto enchant is still on cooldown!"
        stop






 
on drop:
    if event-item's name is "§4§lReality Stone":
        cancel event
        send "&cYou cannot drop the reality Stone!" to player

on inventory click:
    set {_invtype} to "%type of player's current inventory%" # Convert inventory type to text
    if {_invtype} is "chest inventory" or "barrel inventory" or "shulker box inventory" or "crafter inventory" or "ender chest inventory" or "hopper inventory" or "grindstone inventory" or "crafting inventory" or "smithing inventory" or "loom inventory" or "cartography inventory" or "stonecutter inventory" or "furnace inventory" or "blast furnace inventory":
        if event-item is nether star:
            if event-item's name is "§4§lReality Stone":
                cancel event
                send "&cYou cannot store the reality Stone in this container!" to player

on craft of beacon:
    loop all items in event-inventory:
        if loop-item is nether star:
            if loop-item's name is "§4§lReality Stone":
                cancel event
                send "&cYou cannot use the reality Stone to craft a beacon!" to player

on inventory click:
    if player's current inventory is anvil inventory: # Ensures player is using an anvil
        if clicked slot is 0 or 1 or 2: # Anvil slots (Left input, Right input, Output)
            if event-item is nether star:
                if event-item's name is "§4§lReality Stone":
                    cancel event
                    send "&cYou cannot modify the reality Stone in an anvil!" to player