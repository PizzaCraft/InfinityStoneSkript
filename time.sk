on load:
    set {customitems::timestone} to nether star of curse of vanishing named "§2§lTime Stone" with lore "§f§lYour attacks have a 5 percent chance of inflicting mining fatigue" and "§u§lRight-Click: Time Stop - 2:00 cooldown" with custom model data 6
    set {customitems::timestone2} to nether star of curse of vanishing named "§2§lTime Stone" with lore "§8§lPristine" and "Your attacks have a 5 percent chance of inflicting mining fatigue" and "§u§lRight-Click: Time Stop - 2:00 cooldown" and "§9§lLeft-Click: time Wave - 2:00 Cooldown" with custom model data 6
    set {customitems::timestone3} to nether star of curse of vanishing named "§2§lTime Stone" with lore "§8§lPristine" and "Your attacks have a 5 percent chance of inflicting mining fatigue" and "§u§lRight-Click: Time Stop - 2:00 cooldown" and "§9§lLeft-Click: time Wave - 2:00 Cooldown" and "§u§lMainhand + Hit Player: Amplify time - 5:00 cooldown" with custom model data 6
    set {customitems::timestone-1} to nether star of curse of vanishing named "§2§lTime Stone" with lore "§8§lDamaged" and "Your attacks have a 5 percent chance of inflicting mining fatigue"

every 10 seconds:
    loop all players:
        if loop-player's tool's name is "§2§lTime Stone": # Main hand check
            apply potion of haste of tier 2 to loop-player for 10 seconds
        else if loop-player's offhand tool's name is "§2§lTime Stone": # Offhand check
            apply potion of haste of tier 2 to loop-player for 10 seconds

on damage:
    if attacker is a player:
        if attacker's offhand tool's name is "§2§lTime Stone": # Ensures player has time Stone
            set {_chance} to random integer between 1 and 100
            if {_chance} <= 5: # 5% chance to trigger Weakness
                apply mining fatigue to victim for 4 seconds
                
                # Spawn black particles at victim's location
                execute console command "/execute at %victim% run particle minecraft:large_smoke ~ ~ ~ 4 4 4 0 40"
                
                # Play anvil sound at victim's location
                execute console command "/playsound minecraft:block.anvil.land master %attacker%"
on death:
    set {_saved::*} to ""
    loop all items in victim's inventory:
        if name of loop-item contains "§2§lTime Stone":
            add loop-item to {_saved::*}
    wait 1 tick
    loop {_saved::*}:
        give loop-value to victim


on rightclick:
    if name of offhand item of player is "§2§lTime Stone":

        # Prevent multiple triggers in same tick
        if {timestone_processing::%player%} is set:
            stop
        set {timestone_processing::%player%} to true
        wait 1 tick
        delete {timestone_processing::%player%}

        set {_item} to player's held item
        {_item} is air or diamond sword or diamond axe or iron sword or iron axe or stone sword or stone axe

            # proceed

        if {timestone_cooldown::%player%} is set:
            if {timestone_cooldown_message::%player%} is not set:
                send "&a🔮 &cYour §aTime Acceleration &cability is on cooldown for §a%{timestone_cooldown::%player%}%s" to player
                set {timestone_cooldown_message::%player%} to true
                wait 20 ticks
                delete {timestone_cooldown_message::%player%}
            stop

        if {DoubleClick::%player's uuid%} is not set:
            set {DoubleClick::%player's uuid%} to true
            wait 15 ticks
            delete {DoubleClick::%player's uuid%}
        else:
            if {timestone_activated::%player%} is set:
                stop
            delete {DoubleClick::%player's uuid%}
            send "&a🔮 &cYou have activated §aTime Acceleration" to player
            set {timestone_activated::%player%} to true
            set {timestoneInUse::%player%} to true
            apply haste 4 to player for 10 seconds replacing existing effect
            apply speed 2 to player for 10 seconds replacing existing effect
            loop 15 times:
                set {_loc} to location of player
                draw 4 dust using dustOption(rgb(50, 205, 5), 1) at {_loc} with extra 0 with force
                wait 5 tick
            delete {timestoneInUse::%player%}

            # Start cooldown
            set {timestone_cooldown::%player%} to 40

            while {timestone_cooldown::%player%} > 0:
                wait 1 second
                subtract 1 from {timestone_cooldown::%player%}

            delete {timestone_cooldown::%player%}
            delete {timestone_activated::%player%}







on rightclick with nether star:
    if player is set:
        if lore of player's tool contains "§u§lRight-Click: Time Stop - 2:00 cooldown":
            if {timeStoneCooldown::%player%} is set:
                set {_remaining} to {timeStoneCooldown::%player%}
                send "§cAbility is on cooldown! Remaining time: %{_remaining}% seconds" to player
            else:
                if {timeStoneTrigger::%player%} is not set:
                    set {timeStoneTrigger::%player%} to true

                    # Mark ability as in use
                    set {timeInUse::%player%} to true

                    # Time freeze visuals + sounds
                    loop all players in radius 10 around player:
                        execute console command "/score particles target:%uuid of player% shape:circularBeam color:Green maxRadius:10 rate:50 radiusRate:15 extend:2 time:10"
                        play sound "block.trial_spawner.about_to_spawn_item" with volume 1 and pitch 1 to loop-player

                    send "§a§lYou stopped time for 8 seconds!" to player

                    # Freeze nearby untrusted players
                    loop all players in radius 10 around player:
                        if loop-player is not player:
                            if {trust::%uuid of player%::*} does not contain uuid of loop-player:
                                set {frozen::%loop-player%} to true

                    # Freeze particles
                    loop 16 times:
                        loop all players:
                            if {frozen::%loop-player%} is set:
                                draw 3 dust using dustOption(rgb(0, 100, 0), 5) at loop-player with extra 0 with force
                        wait 10 ticks

                    # Unfreeze players after 8 seconds
                    loop all players:
                        if {frozen::%loop-player%} is set:
                            delete {frozen::%loop-player%}
                            send "§aTime resumes..." to loop-player
                            loop all players in radius 5 around loop-player:
                                play sound "block.beacon.deactivate" with volume 1 and pitch 1 to loop-player-2

                    delete {timeInUse::%player%}

                    # Start 120-second cooldown
                    set {timeStoneCooldown::%player%} to 120
                    while {timeStoneCooldown::%player%} > 0:
                        wait 1 second
                        subtract 1 from {timeStoneCooldown::%player%}

                    delete {timeStoneCooldown::%player%}
                    delete {timeStoneTrigger::%player%}
                    send "§eYour Time Stone ability is ready to use again!" to player


every 1 second:
    loop all players:
        if name of offhand item of loop-player is "§2§lTime Stone":

            # ⏳ Main cooldown or “Active..”
            if {timeInUse::%loop-player%} is set:
                set {_cd1} to "&2⏳ &cActive.."
            else if {timeStoneCooldown::%loop-player%} is set:
                set {_total1} to {timeStoneCooldown::%loop-player%}
                set {_min} to floor({_total1} / 60)
                set {_sec} to {_total1} - {_min} * 60

                if {_min} > 0:
                    set {_cd1} to "&2⏳ &b%{_min}%m %{_sec}%s"
                else:
                    set {_cd1} to "&2⏳ &b%{_sec}%s"
            else:
                set {_cd1} to "&2⏳ &aReady!"

            # 🕒 Secondary cooldown or “Active..”
            if {timestoneInUse::%loop-player%} is set:
                set {_cd2} to "&2🕒 &cActive.."
            else if {timestone_cooldown::%loop-player%} is set:
                set {_cd2} to "&2🕒 &b%{timestone_cooldown::%loop-player%}%s"
            else:
                set {_cd2} to "&2🕒 &aReady!"

            # Send combined action bar
            send action bar "%{_cd1}% %{_cd2}%" to loop-player



                
on leftclick with nether star:
    if player is set: # Ensures only players trigger the event
        if lore of player's tool contains "§9§lLeft-Click: time Wave - 2:00 Cooldown":
            if {timeStoneCooldown1::%player%} is set:
                set {_remaining1} to {timeStoneCooldown1::%player%}
                send "§cSecond Ability is on cooldown! Remaining time: %{_remaining1}% seconds" to player
            else:
                if {timeStoneTrigger1::%player%} is not set: # Prevents repeat activations
                    set {timeStoneTrigger1::%player%} to true
     
                    execute console command "score particles target:%uuid of player% shape:circularBeam color:PURPLE maxRadius:5 rate:100 radiusRate:15 extend:2 time:100"           
                    
                    # Damage players caught in the wave
                    loop 6 times:
                        loop all players in radius 8 around player:
                            set {_target} to loop-player
                            if {_target} is not player: # Excludes ability user
                                if {trust::%uuid of player%::*} does not contain uuid of {_target}: # Excludes trusted players
                                    damage {_target} by 4 hearts
                                    apply slowness 2 to {_target} for 120 ticks
                                    wait 1 second

                    set {timeStoneCooldown1::%player%} to 120
                
                    # Countdown for cooldown
                    while {timeStoneCooldown1::%player%} > 0:
                        wait 1 second
                        set {timeStoneCooldown1::%player%} to {timeStoneCooldown1::%player%} - 1
                    
                    delete {timeStoneCooldown1::%player%}
                    delete {timeStoneTrigger1::%player%}
                    send "§eYour time Stone second ability is ready to use again!" to player

on damage:
    if attacker is a player:
        if attacker's tool's name is "§2§lTime Stone": # Ensures player is holding time Stone
            if lore of attacker's tool contains "§u§lMainhand + Hit Player: Amplify time - 5:00 cooldown":
                if {timeStoneCooldown2::%attacker%} is set:
                    set {_remaining} to {timeStoneCooldown2::%attacker%}
                    send "§cUltimate is on cooldown! Remaining time: %{_remaining}% seconds" to attacker
                    cancel event
                else:
                    if {timeStoneTrigger2::%attacker%} is not set: # Prevents repeat activations
                        set {timeStoneTrigger2::%attacker%} to true
                        
                        # Activate ability for 30 seconds
                        set {timeStoneActive::%attacker%} to true
                        set {timeStoneMultiplier::%attacker%} to 1.1 # Start at 1.1x multiplier
                        send "§eYour time Stone ability is active! Each hit temporarily increases damage." to attacker
                        execute console command "/score particles target:%uuid of attacker% shape:helix particle:dragon_breath strings:4 radius:2 rate:0.001 extension:4 height:2 speed:5 fadeUp:false fadeDown: false"
                        
                        loop 30 times: # Loop every second
                            if {timeStoneMultiplier::%attacker%} < 1.75: # Ensure max cap at 1.75x
                                add 0.05 to {timeStoneMultiplier::%attacker%}
                                send "§eYour attack multiplier has increased to %{timeStoneMultiplier::%attacker%}%!" to attacker
                            wait 1 second
                        
                        # Cleanup after 30 seconds
                        delete {timeStoneActive::%attacker%}
                        delete {timeStoneMultiplier::%attacker%}

                        # Set cooldown (5 minutes)
                        set {timeStoneCooldown2::%attacker%} to 300
                    
                        # Countdown for cooldown
                        while {timeStoneCooldown2::%attacker%} > 0:
                            wait 1 second
                            set {timeStoneCooldown2::%attacker%} to {timeStoneCooldown2::%attacker%} - 1
                        
                        delete {timeStoneCooldown2::%attacker%}
                        delete {timeStoneTrigger2::%attacker%}
                        send "§eYour time Stone ultimate is ready to use again!" to attacker

variables:
    {cooldown.%player%} = 0

variables:
    {cooldown.%player%} = 0
    {autoEnchant.%player%} = false  # Default: Auto Enchant enabled


on sneak toggle:
    if {autoEnchant.%player%} is false:
        stop  # Prevent activation if disabled
    if {cooldown.%player%} is greater than now:
        send "&ctime Stone auto enchant is still on cooldown!"
        stop
    if player's offhand tool's name is "§2§lTime Stone":
        execute console command "/enchant %player% mending"
        execute console command "/enchant %player% fortune 3"
        execute console command "/enchant %player% looting 3"
        send "&aYour item has been auto enchanted!"
        set {cooldown.%player%} to now + 60 seconds

 
on drop:
    if event-item's name is "§2§lTime Stone":
        cancel event
        send "&cYou cannot drop the time Stone!" to player

on inventory click:
    set {_invtype} to "%type of player's current inventory%" # Convert inventory type to text
    if {_invtype} is "chest inventory" or "barrel inventory" or "shulker box inventory" or "crafter inventory" or "ender chest inventory" or "hopper inventory" or "grindstone inventory" or "crafting inventory" or "smithing inventory" or "loom inventory" or "cartography inventory" or "stonecutter inventory" or "furnace inventory" or "blast furnace inventory":
        if event-item is nether star:
            if event-item's name is "§2§lTime Stone":
                cancel event
                send "&cYou cannot store the time Stone in this container!" to player

on craft of beacon:
    loop all items in event-inventory:
        if loop-item is nether star:
            if loop-item's name is "§2§lTime Stone":
                cancel event
                send "&cYou cannot use the time Stone to craft a beacon!" to player

on inventory click:
    if player's current inventory is anvil inventory: # Ensures player is using an anvil
        if clicked slot is 0 or 1 or 2: # Anvil slots (Left input, Right input, Output)
            if event-item is nether star:
                if event-item's name is "§2§lTime Stone":
                    cancel event
                    send "&cYou cannot modify the time Stone in an anvil!" to player